{"version":3,"file":"main-element.js","sourceRoot":"","sources":["src/main-element.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, state} from 'lit/decorators.js';\nimport {minireset} from 'minireset.css/minireset.css.lit.js';\nimport './components/variables-container';\nimport './components/formula-container';\nimport {IData} from './types';\n\nconst sampleData: IData = {\n  variables: [\n    {name: 'var1', values: [2, 4]},\n    {name: 'var2', values: [2, null]},\n  ],\n\n  results: [\n    {name: 'cof', values: {equal: [5, 5], formulaDefinition: 'var1+var2'}},\n    {name: 'cof2', values: {equal: [4, 5], formulaDefinition: 'var4+var2'}},\n  ],\n};\n\n@customElement('main-element')\nexport class MainElement extends LitElement {\n  static override styles = css`\n    ${minireset}\n  `;\n\n  @state()\n  private _data: IData = sampleData;\n\n  private _handleAddVariable(variableName: string) {\n    const newData = {...this._data};\n    newData.variables.push({name: variableName, values: []});\n    this._data = newData;\n  }\n  private _handleRemoveVariable(index: number) {\n    const newData = {...this._data};\n    newData.variables = newData.variables.filter((_, i) => i !== index);\n    this._data = newData;\n  }\n\n  private _handleAddFormula(formulaName: string, formulaDefinition: string) {\n    const newData = {...this._data};\n    newData.results.push({\n      name: formulaName,\n      values: {equal: [], formulaDefinition},\n    });\n    this._data = newData;\n  }\n\n  private _handleRemoveFormula(index: number) {\n    const newData = {...this._data};\n    newData.results = newData.results.filter((_, i) => i !== index);\n    this._data = newData;\n  }\n\n  override render() {\n    return html`\n      <variables-container\n        .variables=${this._data.variables}\n        .addVariable=${this._handleAddVariable.bind(this)}\n        .removeVariable=${this._handleRemoveVariable.bind(this)}\n      ></variables-container>\n      <formula-container\n        .results=${this._data.results}\n        .addFormula=${this._handleAddFormula.bind(this)}\n        .removeFormula=${this._handleRemoveFormula.bind(this)}\n      >\n      </formula-container>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'main-element': MainElement;\n  }\n}\n"]}